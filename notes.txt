Angular
1.Online
	Plunker
2.Offline(Local)
	1.Quickstart seed
		a.Direct download
		b.Git Clone
		https://v2.angular.io/docs/ts/latest/guide/setup.html
	2.Angular CLI(Commandline interface)
	https://v2.angular.io/docs/ts/latest/cli-quickstart.html


AngularJS
1.x
angularjs.org

Angular
2.x
4.x

angular.io

1.We can develop rich cliient Web Application
2.We can develop SPA(Single page Application)
3.It easy to develop and more interactive

PreQuirements:
1.Html (Hypertext Markup Language)Html5
2.Css (CasCading Style sheet)Css3
3.Javascript 
4.Server side scripting
	a.Asp.net
	b.Java EE
	c.PHP
5.Ajax

Reference sites:
www.W3schools
www.tutorialpoint
www.javatpoint

Node.js

Angular:ECMA(Euorpian Computer manfacturer Association)ES6 oops
Angular is fully developed using Typescript language

Typescript:
Typescript is super set of Javascript

Typescript is intriduced Google engineer Anders
 typescript is not by browser
 
 Javascript Netscape navigator with in 3 weeks
 IE -->Google
 
 Ex: gmail
 
 Software:
 1.Node js npm(Node Package manager)
 2.Visual Studio Code
 3.Github or mail
 4.typescript
 
 
 AngularJS
1.Library
2.Modular programming concept(74 Directive)
3.No Typescript
4.Controller+scope
5.Nocamelcase in directive name Ex:ng-app,ng-model
6.DependencyInjection(Controller)



Angular(Es6)
1.Framework
2.Component based concept
3.Angular fully developed using typescript.ts
4.Component +directive
5.Camelcase directive Ex:ngModel
6.DependencyInjection(Constructor)
 

Typescript: playground

Angular
1.Online- Plunker
2.Offline-
	a. Quickstart seed
		1.Direct download-npm install then npm start
		2.Git clone-npm install then npm start
	b. Angular CLI(Command Line Interface)

A framework for designing web applications-Angular(Single Page Application)
-----------------------------------------------------------------------------------------------------------------------

Component: ng g c course --flat

1. direct copy paste
	1. create component
	2. create html and css file
	3. include component in app.module.ts and declaration and bootstrap the component.
	4. change the selector in index.html

2. CLI command-ng g c comp_name

AOT and JIT compiler commpiles typescript.

Template reference variable for reading input value with prefix "#" E.g. #topic
------------------------------------------------------------------------------------------------------------------------

Data Binding
To communicate Component to DOM
1.String Interpolation Operator Ex:{{name}}
2.Property Binding Ex:<button [disabled]="false or exp">Some text</button>
3.Event binding Ex:<button (click)="addTopic()">AddTopic</button>
4.Two-way Databinding Ex:<input [(ngModel)]="Exp or name"/>
------------------------------------------------------------------------------------------------------------------------

Directive: ng g d directive_name

1.Builtin Directives
	a.Structural Directives
		1.ngIf
		2.ngFor
		3.ngSwitch
	b.Attribute Directives
		1.ngClass
		2.ngStyle
		3.ngModel
2.Custom Directives
	1.Custom Attrubute Directive Ex:"Srinivas"
	2.Custom Structural Directive Ex:unless
	
	Step:
	1.Create Custom Directive using Cli ng g d attrHighlight
	2.Write Functionality and include which component you want.
	3.include custom directive in app.module.ts
	4.Take tag use it in html page
	
Directives:
Do some additional features
2 types
1.Built in Directives
	1.Attribute Directives 
		a.ngClass Ex:<div [ngClass]="myclass">Some Context</div>
		b.ngStyle Ex:<p [ngStyle]="{'color':'green'}">Here text textchhjgjhjhgkmjhbgkjhjbkbkj</p>
		c.ngModel -- Ex:<input [(ngModel)]="Exp">
	2.Structural Directives
		a.*ngIf Ex:<div *ngIf="true">HiSrinivas</div>
		b.*ngFor Ex:<div *ngFor="let name of names; let i=index">{{i+1}} => {{name}}</div>
		c.*ngSwitch
----------------------------------------------------------------------------------------------------------------------------
		
Custom Pipe: Formatting purpose we use pipes.
Cli
ng g p pipename

Ex:
ng g p custBrackets
{{"Srinivas" | brackets:k}}

[Srinivas]
[SRINIVAS]
[srinivas]
[Srinivas]

Custom Pipe Step
1.Create a custom pipe using cli ng g p brackets
2.Take name from pipe and use the same name in which component
3.Check pipe and custom pipe is included in app.module.ts or not
4.Include custom pipe in which component you want to use
-----------------------------------------------------------------------------------------------------------------------------

Class creation: ng g cl classname
-----------------------------------------------------------------------------------------------------------------------------

Service: ng g s log in userlog
1. Injectable decrator is used to create service
2. Import the service in component of userlog
3. In component decorator use one more property as providers
4. providers:[LogService]
5. To communicate between service and component we use dependency injection: take LogService data to logService property.
6. Service canbe done in two ways:
	a. Promise --Single event
	b. Observable --Multiple event
------------------------------------------------------------------------------------------------------------------------------

Forms :
1. Template Driven form : ng g c login (More HTML and less model code)
2. Module Driven form : ng g c login (More model and less html code)

a. ngSubmit is called on submit of form
b. Module Driven form also known as Reactive forms
c. Import FormGroup, FormBuilder, Validators, ReactiveFormModule in app.module.ts.
d. Using formid we use to show filed values. Ex: this.loginForm.controls["username"].value.
------------------------------------------------------------------------------------------------------------------------------

RecipeBook

recipe
Recipe List
recipe Detail
Shoping


HeaderComponent
RecipeList Component
Recipe Detail Component
Shoping Component
notfound component
login Component
Register Component
app component

myunless
appMyunless

article
article
rbarticle
-----------------------------------------------------------------------------------------------------------------------------------------
rxjs --reactiveX Library Javascript